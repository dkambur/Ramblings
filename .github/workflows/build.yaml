name: Build and Push to GHCR

on:
  push:
    branches: [ main, develop, add-rest-interface ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v5
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: gradle

      - name: Build with Gradle
        run: gradle war

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64
          file: docker/Dockerfile


  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Verify kubectl access
        run: |
          kubectl version --client
          kubectl get pods -n ramblings || echo "No pods yet"

      - name: Deploy to Kubernetes
        run: |
          # Determine the image tag based on branch - LEFTOVER!!!
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            IMAGE_TAG="latest"
          else
            IMAGE_TAG="${{ github.ref_name }}"
          fi
          
          kubectl apply -f kubernetes/k8s-deployment.yaml

      - name: Wait for deployment rollout
        run: |
          kubectl rollout status deployment/ramblings-app -n ramblings --timeout=5m

      - name: Get deployment status
        run: |
          echo "Deployment status:"
          kubectl get deployment ramblings-app -n ramblings
          echo ""
          echo "Pods:"
          kubectl get pods -n ramblings -l app=ramblings-app
