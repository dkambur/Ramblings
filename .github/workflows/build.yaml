name: Build and Push to GHCR

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      IMAGE_TAG: ${{ steps.vars.outputs.IMAGE_TAG }}
      IMAGE_NAME: ${{ steps.vars.outputs.IMAGE_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v5
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: gradle

      - name: Build with Gradle
        run: gradle war

      - name: Set image tag
        id: vars
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          IMAGE_TAG="sha-${SHORT_SHA}"
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT     
          echo "IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV


      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ env.IMAGE_TAG }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64
          file: docker/Dockerfile


  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ needs.build-and-push.outputs.IMAGE_TAG }}
      IMAGE_NAME: ${{ needs.build-and-push.outputs.IMAGE_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Verify kubectl access
        run: |
          kubectl version --client
          kubectl get pods -n ramblings || echo "No pods yet"

      - name: Deploy to Kubernetes
        run: |
          export IMAGE_TAG IMAGE_NAME
          envsubst < kubernetes/k8s-deployment.yaml | kubectl apply -f -

      - name: Wait for deployment rollout
        run: |
          kubectl rollout status deployment/ramblings-app -n ramblings --timeout=5m

      - name: Get deployment status
        run: |
          echo "Deployment status:"
          kubectl get deployment ramblings-app -n ramblings
          echo ""
          echo "Pods:"
          kubectl get pods -n ramblings -l app=ramblings-app
